##Activity
#Engineering Management
Process planning (SDLC)
*Understanding of common software development life cycle models (Waterfall, Agile), Scrum concepts and process, pros and cons of tools, technics and approaches used in a development process.
Estimation
*Terminology understanding, using simple and advanced estimations techniques: Scope, Estimates/Targets/Commitments, Overestimate vs Underestimate, Analogy and Story based estimates, methods: Delphi, PERT, COCOMO II etc.
#Requirements
Software requirements engineering
*Sources of Requirements, Software Requirements Specifications, Requirements Elicitation Techniques (Brainstorming, Interviews, Survey/Questionnaire, Document Analysis), Functional vs Non-Functional requirements.
#Design
OOD
*An ability to use effectively fundamental OOP knowledge, microarchitectural design patterns (as 3 major groups of GoF design patterns like creational, structural and behavioral) and major macroachitectural patterns (MVC, Layered Architecture, IoC, etc), SOLID principles.
DB design
*Relational data concepts understanding (Entity-Relationship, normalization, denormalization, transactions). Defining database structure that guarantee data integrity and relations integrity. Define security and structure based optimization. Design complex databases from scratch. Database engines, ACID.
Modeling
*UML diagrams: structure, behavior and interaction.
#Construction
Programming language
*Language fundamentals, basic constructions, standard language library, tasks
Refactoring
*Refactoring techniques, “code smells” detecting, refactoring and patterns.
Concurrency
*Concurrency and thread management, synchronization methods (locks, re-entrant locks, semaphores, events, shared memory, message queues). Python’s GIL, threading, multiprocessing. Deadlock problem, Thread Pool, Producer-Consumer model, Greenlets, microthreads, coroutines.
Distributed objects and components
*XML-RPC, REST, SOAP, WSDL.
Networking
*OSI model, understanding layers and protocols, TCP/IP. SSH, Telnet, rdesktop, VNC. Python’s socket module. TCP vs UDP, SSL/TLS.
Web UI
*HTML elements and CSS styling, DOM. JavaScript: variables, data type, operators and constructions, event handling. HTML 5.
Web server applications
*Frameworks: Django, Flask, Bottle, web2py, Pyramid. Templating engines: Jinja2, Django template system, Cheetah. Web servers: mod_wsgi, uWSGI, Tornado, nginx, Apache. Content management Systems: Pinax, Plone, Silva, PyLucid.
#DB
SQL
*SQL data types, operators, functions. Data manipulation: insert, update, select, delete. Joins, unions, aggregations, permission management.
DB access
*Python DB-API 2.0, connection and cursor objects. Concepts: CRUD, transaction, index, trigger, view, stored procedure. ODBC, ORM concepts, SQLAlchemy, MySQLdb. NoSQL (MongoDB, Redis).
#Verification
Code quality
*Python Style Guide, Code review theory and toolset, static code analysis tools, metrics.
Automated testing
*Unit test framework including managing test suites, organizing and building tests, applying mocking techniques to test design, evaluating code coverage. Python’s unittest, doctest. Testing of WebUI, GUI.
Security
*Understanding of security concepts, security threats types and prevention techniques, cryptography concepts. HTTP vs HTTPS, authentication and authorization, password security.
#Configuration Management
Product builds and continuous integration
*Automated build concept, building tools (make, ant, rake, etc). Continuous Integration concept, best practices and frameworks.
Managing versions
*Version Control Systems understanding: Git, Perforce, SVN, CVS, Mercurial etc.
##Skill
#Programming languages
Python
JavaScript
HTML
CSS
SQL
Go (golang)
Node.js
Unix Shell Scripting
#Frameworks and libraries
jQuery
ExtJS
Angular.js
React.js
Backbone
Bootstrap
Prototype
ZeroMQ
RabbitMQ
Greenlet
Shrapnel
Tornado
Twisted
Pyramid
Flask
Django
Zope
web2py
Cheetah
Jinja2
Selenium
Docker
Microsoft Visio
#Servers and databases
Apache
nginx
gUnicorn
uWSGI
mod_wsgi
MySQL
Oracle
PostgreSQL
SQLite
MongoDB
Redis
Memcached
Riak
Tokyo Cabinet
#Methodologies and practices
Agile
Scrum
Waterfall
XP
Kanban
TDD
#Continuous integration and build
Jenkins/Hudson
TeamCity
Bamboo
Make
Ant
Fabric
#Version control systems
Git
SVN
CVS
Perforce
Mercurial
#Code quality tools
Pylint
Pychecker
Pyflakes
#Code review tools
Crucible
Review Board
Gerrit
CodeCollaborator
#Issue tracking systems
JIRA
Bugzilla
Trac
Redmine
Rally
#Platforms
Windows
Linux
FreeBSD
#Big Data
HDFS
YARN
Mesos
Hive
MapReduce
Spark
Kafka
Oozie
Thrift
Hadoop
AWS EMR
Aws Redshift
Aws Athena
AWS Kinesis
Google Dataproc
Google BigQuery
Google PubSub
Azure HDinsight
Azure SQL Data Warehouse
Azure EventHubs
#Other candidate's skills
